/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.uib.owu.liferay.cas.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import es.uib.owu.liferay.cas.model.CasServiceUtil;
import es.uib.owu.liferay.cas.model.CasServiceUtilModel;
import es.uib.owu.liferay.cas.model.CasServiceUtilSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CasServiceUtil service. Represents a row in the &quot;casutil_CasServiceUtil&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link es.uib.owu.liferay.cas.model.CasServiceUtilModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CasServiceUtilImpl}.
 * </p>
 *
 * @author vrf495
 * @see CasServiceUtilImpl
 * @see es.uib.owu.liferay.cas.model.CasServiceUtil
 * @see es.uib.owu.liferay.cas.model.CasServiceUtilModel
 * @generated
 */
@JSON(strict = true)
public class CasServiceUtilModelImpl extends BaseModelImpl<CasServiceUtil>
	implements CasServiceUtilModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cas service util model instance should use the {@link es.uib.owu.liferay.cas.model.CasServiceUtil} interface instead.
	 */
	public static final String TABLE_NAME = "casutil_CasServiceUtil";
	public static final Object[][] TABLE_COLUMNS = {
			{ "casServiceId", Types.BIGINT },
			{ "proxyGrantingTicketIou", Types.VARCHAR },
			{ "proxyGrantingTicket", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table casutil_CasServiceUtil (casServiceId LONG not null primary key,proxyGrantingTicketIou VARCHAR(75) null,proxyGrantingTicket VARCHAR(75) null,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table casutil_CasServiceUtil";
	public static final String ORDER_BY_JPQL = " ORDER BY casServiceUtil.casServiceId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY casutil_CasServiceUtil.casServiceId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.es.uib.owu.liferay.cas.model.CasServiceUtil"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.es.uib.owu.liferay.cas.model.CasServiceUtil"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.uib.owu.liferay.cas.model.CasServiceUtil"),
			true);
	public static long PROXYGRANTINGTICKETIOU_COLUMN_BITMASK = 1L;
	public static long CASSERVICEID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CasServiceUtil toModel(CasServiceUtilSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CasServiceUtil model = new CasServiceUtilImpl();

		model.setCasServiceId(soapModel.getCasServiceId());
		model.setProxyGrantingTicketIou(soapModel.getProxyGrantingTicketIou());
		model.setProxyGrantingTicket(soapModel.getProxyGrantingTicket());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CasServiceUtil> toModels(CasServiceUtilSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CasServiceUtil> models = new ArrayList<CasServiceUtil>(soapModels.length);

		for (CasServiceUtilSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.es.uib.owu.liferay.cas.model.CasServiceUtil"));

	public CasServiceUtilModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _casServiceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCasServiceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _casServiceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CasServiceUtil.class;
	}

	@Override
	public String getModelClassName() {
		return CasServiceUtil.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("casServiceId", getCasServiceId());
		attributes.put("proxyGrantingTicketIou", getProxyGrantingTicketIou());
		attributes.put("proxyGrantingTicket", getProxyGrantingTicket());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long casServiceId = (Long)attributes.get("casServiceId");

		if (casServiceId != null) {
			setCasServiceId(casServiceId);
		}

		String proxyGrantingTicketIou = (String)attributes.get(
				"proxyGrantingTicketIou");

		if (proxyGrantingTicketIou != null) {
			setProxyGrantingTicketIou(proxyGrantingTicketIou);
		}

		String proxyGrantingTicket = (String)attributes.get(
				"proxyGrantingTicket");

		if (proxyGrantingTicket != null) {
			setProxyGrantingTicket(proxyGrantingTicket);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getCasServiceId() {
		return _casServiceId;
	}

	@Override
	public void setCasServiceId(long casServiceId) {
		_casServiceId = casServiceId;
	}

	@JSON
	@Override
	public String getProxyGrantingTicketIou() {
		if (_proxyGrantingTicketIou == null) {
			return StringPool.BLANK;
		}
		else {
			return _proxyGrantingTicketIou;
		}
	}

	@Override
	public void setProxyGrantingTicketIou(String proxyGrantingTicketIou) {
		_columnBitmask |= PROXYGRANTINGTICKETIOU_COLUMN_BITMASK;

		if (_originalProxyGrantingTicketIou == null) {
			_originalProxyGrantingTicketIou = _proxyGrantingTicketIou;
		}

		_proxyGrantingTicketIou = proxyGrantingTicketIou;
	}

	public String getOriginalProxyGrantingTicketIou() {
		return GetterUtil.getString(_originalProxyGrantingTicketIou);
	}

	@JSON
	@Override
	public String getProxyGrantingTicket() {
		if (_proxyGrantingTicket == null) {
			return StringPool.BLANK;
		}
		else {
			return _proxyGrantingTicket;
		}
	}

	@Override
	public void setProxyGrantingTicket(String proxyGrantingTicket) {
		_proxyGrantingTicket = proxyGrantingTicket;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CasServiceUtil.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CasServiceUtil toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CasServiceUtil)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CasServiceUtilImpl casServiceUtilImpl = new CasServiceUtilImpl();

		casServiceUtilImpl.setCasServiceId(getCasServiceId());
		casServiceUtilImpl.setProxyGrantingTicketIou(getProxyGrantingTicketIou());
		casServiceUtilImpl.setProxyGrantingTicket(getProxyGrantingTicket());
		casServiceUtilImpl.setGroupId(getGroupId());
		casServiceUtilImpl.setCompanyId(getCompanyId());
		casServiceUtilImpl.setUserId(getUserId());
		casServiceUtilImpl.setUserName(getUserName());
		casServiceUtilImpl.setCreateDate(getCreateDate());
		casServiceUtilImpl.setModifiedDate(getModifiedDate());

		casServiceUtilImpl.resetOriginalValues();

		return casServiceUtilImpl;
	}

	@Override
	public int compareTo(CasServiceUtil casServiceUtil) {
		long primaryKey = casServiceUtil.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CasServiceUtil)) {
			return false;
		}

		CasServiceUtil casServiceUtil = (CasServiceUtil)obj;

		long primaryKey = casServiceUtil.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CasServiceUtilModelImpl casServiceUtilModelImpl = this;

		casServiceUtilModelImpl._originalProxyGrantingTicketIou = casServiceUtilModelImpl._proxyGrantingTicketIou;

		casServiceUtilModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CasServiceUtil> toCacheModel() {
		CasServiceUtilCacheModel casServiceUtilCacheModel = new CasServiceUtilCacheModel();

		casServiceUtilCacheModel.casServiceId = getCasServiceId();

		casServiceUtilCacheModel.proxyGrantingTicketIou = getProxyGrantingTicketIou();

		String proxyGrantingTicketIou = casServiceUtilCacheModel.proxyGrantingTicketIou;

		if ((proxyGrantingTicketIou != null) &&
				(proxyGrantingTicketIou.length() == 0)) {
			casServiceUtilCacheModel.proxyGrantingTicketIou = null;
		}

		casServiceUtilCacheModel.proxyGrantingTicket = getProxyGrantingTicket();

		String proxyGrantingTicket = casServiceUtilCacheModel.proxyGrantingTicket;

		if ((proxyGrantingTicket != null) &&
				(proxyGrantingTicket.length() == 0)) {
			casServiceUtilCacheModel.proxyGrantingTicket = null;
		}

		casServiceUtilCacheModel.groupId = getGroupId();

		casServiceUtilCacheModel.companyId = getCompanyId();

		casServiceUtilCacheModel.userId = getUserId();

		casServiceUtilCacheModel.userName = getUserName();

		String userName = casServiceUtilCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			casServiceUtilCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			casServiceUtilCacheModel.createDate = createDate.getTime();
		}
		else {
			casServiceUtilCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			casServiceUtilCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			casServiceUtilCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return casServiceUtilCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{casServiceId=");
		sb.append(getCasServiceId());
		sb.append(", proxyGrantingTicketIou=");
		sb.append(getProxyGrantingTicketIou());
		sb.append(", proxyGrantingTicket=");
		sb.append(getProxyGrantingTicket());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("es.uib.owu.liferay.cas.model.CasServiceUtil");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>casServiceId</column-name><column-value><![CDATA[");
		sb.append(getCasServiceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>proxyGrantingTicketIou</column-name><column-value><![CDATA[");
		sb.append(getProxyGrantingTicketIou());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>proxyGrantingTicket</column-name><column-value><![CDATA[");
		sb.append(getProxyGrantingTicket());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CasServiceUtil.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CasServiceUtil.class
		};
	private long _casServiceId;
	private String _proxyGrantingTicketIou;
	private String _originalProxyGrantingTicketIou;
	private String _proxyGrantingTicket;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private CasServiceUtil _escapedModel;
}